#!/bin/bash

# ‚è∞ Script Setup Cron Job Backup Laravel
# Author: Development Team
# Version: 1.0
# Description: Setup automatic backup dengan cron job

set -e  # Exit on any error

# Konfigurasi
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BACKUP_SCRIPT="$PROJECT_DIR/backup_images.sh"
INCREMENTAL_SCRIPT="$PROJECT_DIR/backup_images_incremental.sh"

# Fungsi help
show_help() {
    echo "‚è∞ Laravel Backup Cron Setup Script"
    echo ""
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  -h, --help           Show this help message"
    echo "  -l, --list           List current cron jobs"
    echo "  -r, --remove         Remove backup cron jobs"
    echo "  -s, --setup          Setup default cron jobs"
    echo "  -c, --custom         Setup custom cron jobs"
    echo ""
    echo "Default Setup:"
    echo "  - Full backup: Daily at 2:00 AM"
    echo "  - Incremental: Every 6 hours"
    echo "  - Status check: Daily at 6:00 AM"
    echo ""
    echo "Examples:"
    echo "  $0 --setup          # Setup default cron jobs"
    echo "  $0 --list           # List current cron jobs"
    echo "  $0 --remove         # Remove backup cron jobs"
    echo ""
}

# Fungsi untuk list cron jobs
list_cron_jobs() {
    echo "üìã Current Cron Jobs:"
    echo "===================="
    
    if command -v crontab &> /dev/null; then
        CURRENT_CRON=$(crontab -l 2>/dev/null || echo "")
        
        if [ -z "$CURRENT_CRON" ]; then
            echo "‚ùå No cron jobs found"
            return
        fi
        
        # Filter backup-related cron jobs
        BACKUP_CRON=$(echo "$CURRENT_CRON" | grep -E "(backup_images|check_backup)" || echo "")
        
        if [ -z "$BACKUP_CRON" ]; then
            echo "‚ùå No backup cron jobs found"
        else
            echo "$BACKUP_CRON" | while read line; do
                if [ -n "$line" ] && [[ ! $line =~ ^# ]]; then
                    echo "   ‚è∞ $line"
                fi
            done
        fi
        
        echo ""
        echo "üìã All Cron Jobs:"
        echo "$CURRENT_CRON" | while read line; do
            if [ -n "$line" ]; then
                if [[ $line =~ ^# ]]; then
                    echo "   üí¨ $line"
                else
                    echo "   ‚è∞ $line"
                fi
            fi
        done
    else
        echo "‚ùå crontab command not available"
    fi
}

# Fungsi untuk remove cron jobs
remove_cron_jobs() {
    echo "üóëÔ∏è  Removing backup cron jobs..."
    
    if command -v crontab &> /dev/null; then
        CURRENT_CRON=$(crontab -l 2>/dev/null || echo "")
        
        if [ -z "$CURRENT_CRON" ]; then
            echo "‚ùå No cron jobs found"
            return
        fi
        
        # Remove backup-related cron jobs
        NEW_CRON=$(echo "$CURRENT_CRON" | grep -v -E "(backup_images|check_backup)" || echo "")
        
        if [ "$NEW_CRON" = "$CURRENT_CRON" ]; then
            echo "‚ùå No backup cron jobs found to remove"
        else
            echo "$NEW_CRON" | crontab -
            echo "‚úÖ Backup cron jobs removed successfully"
        fi
    else
        echo "‚ùå crontab command not available"
    fi
}

# Fungsi untuk setup default cron jobs
setup_default_cron() {
    echo "‚è∞ Setting up default backup cron jobs..."
    
    if command -v crontab &> /dev/null; then
        # Get current cron jobs
        CURRENT_CRON=$(crontab -l 2>/dev/null || echo "")
        
        # Remove existing backup cron jobs
        CURRENT_CRON=$(echo "$CURRENT_CRON" | grep -v -E "(backup_images|check_backup)" || echo "")
        
        # Add new backup cron jobs
        NEW_CRON="$CURRENT_CRON"
        
        # Add header comment
        NEW_CRON="$NEW_CRON
# Laravel Images Backup Cron Jobs
# Generated by setup_backup_cron.sh on $(date)"

        # Full backup daily at 2:00 AM
        NEW_CRON="$NEW_CRON
0 2 * * * cd $PROJECT_DIR && ./backup_images.sh >> $PROJECT_DIR/backups/logs/cron_full_$(date +\%Y-\%m-\%d).log 2>&1"

        # Incremental backup every 6 hours
        NEW_CRON="$NEW_CRON
0 */6 * * * cd $PROJECT_DIR && ./backup_images_incremental.sh >> $PROJECT_DIR/backups/logs/cron_incremental_$(date +\%Y-\%m-\%d).log 2>&1"

        # Status check daily at 6:00 AM
        NEW_CRON="$NEW_CRON
0 6 * * * cd $PROJECT_DIR && ./check_backup_status.sh >> $PROJECT_DIR/backups/logs/cron_status_$(date +\%Y-\%m-\%d).log 2>&1"

        # Apply new cron jobs
        echo "$NEW_CRON" | crontab -
        
        echo "‚úÖ Default cron jobs setup successfully:"
        echo "   üì¶ Full backup: Daily at 2:00 AM"
        echo "   üì¶ Incremental backup: Every 6 hours"
        echo "   üìä Status check: Daily at 6:00 AM"
        echo ""
        echo "üìù Log files will be created in: $PROJECT_DIR/backups/logs/"
    else
        echo "‚ùå crontab command not available"
        exit 1
    fi
}

# Fungsi untuk setup custom cron jobs
setup_custom_cron() {
    echo "‚è∞ Setting up custom backup cron jobs..."
    echo ""
    
    # Full backup schedule
    echo "üì¶ Full Backup Schedule:"
    echo "1. Daily at 2:00 AM (default)"
    echo "2. Daily at 3:00 AM"
    echo "3. Weekly on Sunday at 2:00 AM"
    echo "4. Custom schedule"
    echo ""
    read -p "Choose full backup schedule (1-4): " full_choice
    
    case $full_choice in
        1) FULL_SCHEDULE="0 2 * * *" ;;
        2) FULL_SCHEDULE="0 3 * * *" ;;
        3) FULL_SCHEDULE="0 2 * * 0" ;;
        4) 
            read -p "Enter custom schedule (min hour day month weekday): " FULL_SCHEDULE
            ;;
        *) 
            echo "‚ùå Invalid choice, using default"
            FULL_SCHEDULE="0 2 * * *"
            ;;
    esac
    
    echo ""
    echo "üì¶ Incremental Backup Schedule:"
    echo "1. Every 6 hours (default)"
    echo "2. Every 4 hours"
    echo "3. Every 12 hours"
    echo "4. Custom schedule"
    echo ""
    read -p "Choose incremental backup schedule (1-4): " inc_choice
    
    case $inc_choice in
        1) INC_SCHEDULE="0 */6 * * *" ;;
        2) INC_SCHEDULE="0 */4 * * *" ;;
        3) INC_SCHEDULE="0 */12 * * *" ;;
        4) 
            read -p "Enter custom schedule (min hour day month weekday): " INC_SCHEDULE
            ;;
        *) 
            echo "‚ùå Invalid choice, using default"
            INC_SCHEDULE="0 */6 * * *"
            ;;
    esac
    
    echo ""
    read -p "Enable status check? (y/N): " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        read -p "Enter status check schedule (min hour day month weekday): " STATUS_SCHEDULE
        ENABLE_STATUS=true
    else
        ENABLE_STATUS=false
    fi
    
    # Apply custom cron jobs
    if command -v crontab &> /dev/null; then
        CURRENT_CRON=$(crontab -l 2>/dev/null || echo "")
        CURRENT_CRON=$(echo "$CURRENT_CRON" | grep -v -E "(backup_images|check_backup)" || echo "")
        
        NEW_CRON="$CURRENT_CRON"
        NEW_CRON="$NEW_CRON
# Laravel Images Backup Cron Jobs (Custom)
# Generated by setup_backup_cron.sh on $(date)"

        # Full backup
        NEW_CRON="$NEW_CRON
$FULL_SCHEDULE cd $PROJECT_DIR && ./backup_images.sh >> $PROJECT_DIR/backups/logs/cron_full_$(date +\%Y-\%m-\%d).log 2>&1"

        # Incremental backup
        NEW_CRON="$NEW_CRON
$INC_SCHEDULE cd $PROJECT_DIR && ./backup_images_incremental.sh >> $PROJECT_DIR/backups/logs/cron_incremental_$(date +\%Y-\%m-\%d).log 2>&1"

        # Status check (optional)
        if [ "$ENABLE_STATUS" = true ]; then
            NEW_CRON="$NEW_CRON
$STATUS_SCHEDULE cd $PROJECT_DIR && ./check_backup_status.sh >> $PROJECT_DIR/backups/logs/cron_status_$(date +\%Y-\%m-\%d).log 2>&1"
        fi
        
        echo "$NEW_CRON" | crontab -
        
        echo "‚úÖ Custom cron jobs setup successfully:"
        echo "   üì¶ Full backup: $FULL_SCHEDULE"
        echo "   üì¶ Incremental backup: $INC_SCHEDULE"
        if [ "$ENABLE_STATUS" = true ]; then
            echo "   üìä Status check: $STATUS_SCHEDULE"
        fi
    else
        echo "‚ùå crontab command not available"
        exit 1
    fi
}

# Parse arguments
case "${1:-}" in
    -h|--help)
        show_help
        exit 0
        ;;
    -l|--list)
        list_cron_jobs
        exit 0
        ;;
    -r|--remove)
        remove_cron_jobs
        exit 0
        ;;
    -s|--setup)
        setup_default_cron
        exit 0
        ;;
    -c|--custom)
        setup_custom_cron
        exit 0
        ;;
    "")
        # No arguments, show help
        show_help
        exit 0
        ;;
    *)
        echo "‚ùå Unknown option: $1"
        show_help
        exit 1
        ;;
esac
